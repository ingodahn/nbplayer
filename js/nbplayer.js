
function getCookie(cname) {
  var name = cname + "=";
  var decodedCookie = decodeURIComponent(document.cookie);
  var ca = decodedCookie.split(';');
  for(var i = 0; i <ca.length; i++) {
    var c = ca[i];
    while (c.charAt(0) == ' ') {
      c = c.substring(1);
    }
    if (c.indexOf(name) == 0) {
      return c.substring(name.length, c.length);
    }
  }
  return "";
}

// Initializing player according to cookie
function initializePlayer () {
  var mv=getCookie('sageLang');
  if (mv == "") mv = 'sage';
  $('#sageLang').find("option[value='"+mv+"']").prop('selected',true);
  mv=getCookie('sageCellsType');
  if (mv == "") mv = 'linked';
  $('#sageCellsType').find("option[value='"+mv+"']").prop('selected',true);
  mv=getCookie('playerPanes');
  if (mv == "") mv = 'ExecRead';
  $('#playerPanes').find("option[value='"+mv+"']").prop('selected',true);
}

initializePlayer();

function makePlayer () {
  var filename=document.getElementById('file').files.item(0).name;
  playerConfig.name=filename.substring(0,filename.indexOf('.'));
  /* Removing a-tags with empty content generated by nbviewer */
 $('a').each(function() {
  if ($(this).text().match(/^\s*$/)) {
    $(this).remove();
  }
});
  $('script[src="http://www.google-analytics.com/ga.js"]').remove();
  $('#controls').remove();
  $('#help').remove();
  $('#footer').remove();
  makeMenu();
  addSagecells(".nb-code-cell",".nb-input");
  makeTransferData();
  makeSageCells(playerConfig);
  absolutize();
  if (playerConfig.execute) setExecute();
}

$("#sageLang").change(function() {
  playerConfig.lang=$("#sageLang").val();
  document.cookie="sageLang="+playerConfig.lang;
});
$("#sageCellsType").change(function() {
  var cellType=$('#sageCellsType option').filter(':selected').val();
  switch (cellType) {
    case 'auto': {
      playerConfig.linked=false;
      playerConfig.eval=true;
      break;
    }
    case 'single': {
      playerConfig.linked=false;
      playerConfig.eval=false;
      break;
    }
    default: {
      playerConfig.linked=true;
      playerConfig.eval=false;
    }
  }
  document.cookie="sageCellsType="+cellType;
});

$("#playerPanes").change(function() {
  var panes=$("#playerPanes option").filter(':selected').val();
  playerConfig.panes=panes;
  playerConfig.execute=(panes=="ReadExec")?false:true;
  playerConfig.showRead=(panes == "Exec")?false:true;
  document.cookie="playerPanes="+panes;
})
/* addSageCells(
 * rootNode: Selector for node to which cell will be appended - codeCell
 * inNode: Selector for node from which script is taken - cellInput
 )
*/
function addSagecells(rootNode,inNode) {
  var cell = `
  <div class='compute'>
    <script type='text/x-sage'>1+1</script>
  </div>`;
  let scScript='';
  $(rootNode).each(function () {
    $(this).append(cell);
    // commenting out figure commands to avoid character graphics. Octave cells will show only the last graphics
    scScript = $(this).find(inNode).text().replace(/figure/g,"% figure");
    $(this).find('.compute script').text(scScript);
    $(this).find('.compute').hide();
  });
}


function absolutize () {
  $('script').each(function () {
    let srcpath=$(this).attr('src');
    if (srcpath && (srcpath.substring(0,4) != 'http') && (srcpath.substring(0,2) == './' )) {
      srcpath=srcpath.substring(1);
      $(this).attr('src',playerPath+srcpath);
    }
  });
  $('link[rel="stylesheet"]').each(function () {
    let srcpath=$(this).attr('href');
    if (srcpath && (srcpath.substring(0,4) != 'http') && (srcpath.substring(0,2) == './' )) {
      srcpath=srcpath.substring(1);
      $(this).attr('href',playerPath+srcpath);
    }
  })
}